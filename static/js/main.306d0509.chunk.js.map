{"version":3,"sources":["Images/image1.jpg","Context.js","withContext.js","components/AddProduct.js","components/CartItem.js","components/Cart.js","components/Login.js","components/ProductItem.js","components/ProductList.js","components/HomePage.js","components/ProductManagement.js","components/About.js","Navbar.js","components/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","withContext","WrappedComponent","props","Consumer","context","initState","name","price","stock","shortDesc","description","save","e","a","preventDefault","state","id","Math","random","toString","substring","Date","now","axios","post","addProduct","setState","flash","status","msg","handleChange","target","value","this","user","url","window","location","href","accessLevel","className","onSubmit","type","onChange","required","rows","style","resize","onClick","to","includes","Component","CartItem","cartItem","cartKey","product","amount","useState","showNotification","setShowNotification","textTransform","setTimeout","removeFromCart","cart","cartKeys","Object","keys","length","map","key","clearCart","checkout","login","username","password","error","then","loggedIn","ProductItem","addToCart","products","index","Homepage","useContext","isAdmin","src","image1","alt","ConfirmationModal","message","onConfirm","onCancel","ProductManagement","setProducts","editingProductId","setEditingProductId","editedProduct","setEditedProduct","showDeleteConfirmation","setShowDeleteConfirmation","showUpdateConfirmation","setShowUpdateConfirmation","useEffect","get","response","data","console","log","fetchProducts","deleteProduct","productId","delete","reload","cancelEdit","handleInputChange","prevProduct","saveProduct","put","_id","productToEdit","find","editProduct","About","Navbar","logout","showMenu","setShowMenu","role","aria-label","aria-expanded","aria-hidden","orders","setOrders","Orders","filter","order","checkoutCart","email","fetchOrders","markCompleted","orderId","editedOrder","updatedOrders","o","deleteOrder","items","item","reduce","total","timestamp","toLocaleString","App","setUser","setCart","popupVisible","setPopupVisible","routerRef","useRef","localStorage","getItem","productsResponse","JSON","parse","fetchData","removeItem","current","history","push","updatedCart","values","updatedProducts","p","Provider","cartItemId","setItem","stringify","Promise","resolve","reject","db","users","authenticatedUser","token","callback","ref","exact","path","component","HomePage","Login","Cart","AddProduct","ProductList","ProjectManagement","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.306d0509.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.77135d14.jpg\";","import React from \"react\";\r\nconst Context = React.createContext({});\r\nexport default Context;\r\n","import React from \"react\";\r\nimport Context from \"./Context\";\r\n\r\nconst withContext = WrappedComponent => {\r\n  const WithHOC = props => {\r\n    return (\r\n      <Context.Consumer>\r\n        {context => <WrappedComponent {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  };\r\n\r\n  return WithHOC;\r\n};\r\n\r\nexport default withContext;\r\n","import React, { Component } from \"react\";\r\nimport withContext from \"../withContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst initState = {\r\n  name: \"\",\r\n  price: \"\",\r\n  stock: \"\",\r\n  shortDesc: \"\",\r\n  description: \"\",\r\n};\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initState;\r\n  }\r\n\r\n  save = async (e) => {\r\n    e.preventDefault();\r\n    const { name, price, stock, shortDesc, description } = this.state;\r\n\r\n    if (name && price) {\r\n      const id =\r\n        Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n\r\n      await axios.post(\r\n        \"https://xw7qzi3dgg.execute-api.ap-south-1.amazonaws.com/dev/api/v1/addProduct\",\r\n        { id, name, price, stock, shortDesc, description }\r\n      );\r\n\r\n      this.props.context.addProduct(\r\n        {\r\n          name,\r\n          price,\r\n          shortDesc,\r\n          description,\r\n          stock: stock || 0,\r\n        },\r\n        () => this.setState(initState)\r\n      );\r\n      this.setState({\r\n        flash: { status: \"is-success\", msg: \"Product created successfully\" },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        flash: { status: \"is-danger\", msg: \"Please enter name and price\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) =>\r\n    this.setState({ [e.target.name]: e.target.value, error: \"\" });\r\n\r\n  render() {\r\n    const { name, price, stock, shortDesc, description } = this.state;\r\n    const { user } = this.props.context;\r\n    const url = window.location.href;\r\n    return !(user && user.accessLevel < 1) ? (\r\n      <Redirect to={url.includes(\"localhost\") ? \"/\" : \"/e-commerce-store\"} />\r\n    ) : (\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title has-text-centered\">Add Product</h1>\r\n          <form onSubmit={this.save}>\r\n            <div className=\"columns is-centered\">\r\n              <div className=\"column is-one-third\">\r\n                <div className=\"field\">\r\n                  <label className=\"label\">Product Name:</label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\">Price:</label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                      value={price}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\">Available in Stock:</label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      name=\"stock\"\r\n                      value={stock}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\">Short Description:</label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      name=\"shortDesc\"\r\n                      value={shortDesc}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\">Description:</label>\r\n                  <div className=\"control\">\r\n                    <textarea\r\n                      className=\"textarea\"\r\n                      rows=\"2\"\r\n                      style={{ resize: \"none\" }}\r\n                      name=\"description\"\r\n                      value={description}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {this.state.flash && (\r\n                  <div\r\n                    className={`notification ${this.state.flash.status}`}\r\n                  >\r\n                    {this.state.flash.msg}\r\n                  </div>\r\n                )}\r\n                <div className=\"field is-clearfix\">\r\n                  <button\r\n                    className=\"button is-primary is-outlined is-pulled-right\"\r\n                    type=\"submit\"\r\n                    onClick={this.save}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withContext(AddProduct);\r\n","import React, { useState } from \"react\";\r\n\r\nconst CartItem = (props) => {\r\n  const { cartItem, cartKey } = props;\r\n  const { product, amount } = cartItem;\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  const handleRemoveFromCart = () => {\r\n    setShowNotification(true);\r\n    setTimeout(() => {\r\n      setShowNotification(false);\r\n      props.removeFromCart(cartKey);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"column is-half\">\r\n      <div className=\"box\">\r\n        <div className=\"media\">\r\n          <div className=\"media-content\">\r\n            <b style={{ textTransform: \"capitalize\" }}>\r\n              {product.name}{\" \"}\r\n              <span className=\"tag is-primary\">${product.price}</span>\r\n            </b>\r\n            <div>{product.shortDesc}</div>\r\n            <small>{`${amount} in cart`}</small>\r\n          </div>\r\n          <div className=\"media-right\" onClick={handleRemoveFromCart}>\r\n            <span className=\"delete is-large\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNotification && (\r\n        <div className=\"notification is-success\">\r\n          Item removed from the cart!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState } from \"react\";\r\nimport withContext from \"../withContext\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = (props) => {\r\n  const { cart } = props.context;\r\n  const cartKeys = Object.keys(cart || {});\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  const handleClearCart = () => {\r\n    setShowNotification(true);\r\n    setTimeout(() => {\r\n      setShowNotification(false);\r\n      props.context.clearCart();\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hero is-primary\">\r\n        <div className=\"hero-body container\">\r\n          <h4 className=\"title\">My Cart</h4>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"container\">\r\n        {cartKeys.length ? (\r\n          <div className=\"column columns is-multiline\">\r\n            {cartKeys.map((key) => (\r\n              <CartItem\r\n                cartKey={key}\r\n                key={key}\r\n                cartItem={cart[key]}\r\n                removeFromCart={props.context.removeFromCart}\r\n              />\r\n            ))}\r\n            <div className=\"column is-12 is-clearfix\">\r\n              <br />\r\n              <div className=\"is-pulled-right\">\r\n                <button\r\n                  onClick={handleClearCart}\r\n                  className=\"button is-warning\"\r\n                >\r\n                  Clear cart\r\n                </button>{\" \"}\r\n                <button\r\n                  className=\"button is-success\"\r\n                  onClick={props.context.checkout}\r\n                >\r\n                  Checkout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"column\">\r\n            <div className=\"title has-text-grey-light\">No item in cart!</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {showNotification && (\r\n        <div className=\"notification is-success cart-notification\">\r\n          Cart cleared successfully!\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withContext(Cart);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport withContext from \"../withContext\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value, error: \"\" });\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, password } = this.state;\r\n    if (!username || !password) {\r\n      return this.setState({ error: \"Fill all fields!\" });\r\n    }\r\n    this.props.context.login(username, password)\r\n      .then((loggedIn) => {\r\n        if (!loggedIn) {\r\n          this.setState({ error: \"Invalid Credentails\" });\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const url = window.location.href;\r\n    return !this.props.context.user ? (\r\n      <>\r\n        <div className=\"hero is-primary \">\r\n          <div className=\"hero-body container\">\r\n            <h4 className=\"title\">Login</h4>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <form onSubmit={this.login}>\r\n          <div className=\"columns is-mobile is-centered\">\r\n            <div className=\"column is-one-third\">\r\n              <div className=\"field\">\r\n                <label className=\"label\">Email: </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"email\"\r\n                  name=\"username\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Password: </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              {this.state.error && (\r\n                <div className=\"has-text-danger\">{this.state.error}</div>\r\n              )}\r\n              <div className=\"field is-clearfix\">\r\n                <button\r\n                  className=\"button is-primary is-outlined is-pulled-right\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </>\r\n    ) : (\r\n      <Redirect to={url.includes(\"localhost\") ? \"/\" : \"/e-commerce-store\"} className=\"button is-link\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withContext(Login);\r\n","import React from \"react\";\r\n\r\nconst ProductItem = (props) => {\r\n  const { product } = props;\r\n\r\n  return (\r\n    <div className=\"column is-one-third\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <p className=\"title is-5 has-text-centered\">{product.name}</p>\r\n          <p className=\"subtitle is-6 has-text-centered\">${product.price}</p>\r\n          <p>{product.shortDesc}</p>\r\n        </div>\r\n        <footer className=\"card-footer\">\r\n          <div className=\"card-footer-item\">\r\n            {product.stock > 0 ? (\r\n              <span className=\"tag is-success\">In Stock</span>\r\n            ) : (\r\n              <span className=\"tag is-danger\">Out Of Stock</span>\r\n            )}\r\n          </div>\r\n          <div className=\"card-footer-item\">\r\n            <button\r\n              className=\"button is-primary is-small\"\r\n              onClick={() =>\r\n                props.addToCart({\r\n                  id: product.name,\r\n                  product,\r\n                  amount: 1,\r\n                })\r\n              }\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport withContext from \"../withContext\";\r\n\r\nconst ProductList = (props) => {\r\n  const { products } = props.context;\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title has-text-centered\">Our Products</h1>\r\n        <div className=\"columns is-multiline\">\r\n          {products && products.length ? (\r\n            products.map((product, index) => (\r\n              <ProductItem\r\n                product={product}\r\n                key={index}\r\n                addToCart={props.context.addToCart}\r\n                removeFromCart={props.context.removeFromCart}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle has-text-grey-light has-text-centered\">\r\n                No products found!\r\n              </h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withContext(ProductList);\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from \"../Context\";\r\nimport image1 from \"../Images/image1.jpg\";\r\n\r\nconst Homepage = () => {\r\n  const { user, isAdmin } = useContext(Context);\r\n\r\n  // Generate random introduction paragraph\r\n  const generateIntroduction = () => {\r\n    const introduction =\r\n      \"Welcome to our online store. We offer a wide range of products to meet your needs and preferences. From trendy fashion items to essential home goods, we have it all. Our mission is to provide you with a seamless shopping experience and deliver high-quality products right to your doorstep. Whether you're looking for the latest fashion trends, home decor inspiration, or tech gadgets, we've got you covered. Start exploring our collection today and find the perfect items to enhance your lifestyle.\";\r\n\r\n    return introduction;\r\n  };\r\n\r\n  const introduction = generateIntroduction();\r\n  const url = window.location.href;\r\n\r\n\r\n  return (\r\n    <section className=\"hero is-primary is-fullheight\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"columns is-vcentered\">\r\n            <div className=\"column\">\r\n              <h1 className=\"title is-size-1\">Welcome to Ecommerce Store</h1>\r\n              <p className=\"subtitle\">{introduction}</p>\r\n              <div className=\"buttons is-centered is-flex-direction-column-mobile\">\r\n                {user ? (\r\n                  <>\r\n                    {isAdmin ? (\r\n                      <>\r\n                        <Link to={url.includes(\"localhost\") ? \"/product-management\" : \"/e-commerce-store/product-management\"} className=\"button is-primary is-rounded\">\r\n                          Product Management\r\n                        </Link>\r\n                        <Link to={url.includes(\"localhost\") ? \"/logout\" : \"/e-commerce-store/logout\"} className=\"button is-danger is-rounded\">\r\n                          Logout\r\n                        </Link>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Link to={url.includes(\"localhost\") ? \"/products\" : \"/e-commerce-store/products\"} className=\"button is-primary is-rounded\">\r\n                          Products\r\n                        </Link>\r\n                        <Link to={url.includes(\"localhost\") ? \"/cart\" : \"/e-commerce-store/cart\"} className=\"button is-info is-rounded\">\r\n                          Cart\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Link to={url.includes(\"localhost\") ? \"/login\" : \"/e-commerce-store/login\"} className=\"button is-primary is-rounded\">\r\n                    Login\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"image-container\">\r\n                <img src={image1} alt=\"Image 1\" className=\"homepage-image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from \"../Context\";\r\n\r\nconst ConfirmationModal = ({ message, onConfirm, onCancel }) => (\r\n  <div className=\"modal is-active\">\r\n    <div className=\"modal-background\" />\r\n    <div className=\"modal-content\">\r\n      <div className=\"box\">\r\n        <p>{message}</p>\r\n        <div className=\"buttons\">\r\n          <button className=\"button is-primary\" onClick={onConfirm}>\r\n            Yes\r\n          </button>\r\n          <button className=\"button\" onClick={onCancel}>\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst ProductManagement = () => {\r\n  const { products, setProducts } = useContext(Context);\r\n  const [editingProductId, setEditingProductId] = useState(null);\r\n  const [editedProduct, setEditedProduct] = useState({});\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [showUpdateConfirmation, setShowUpdateConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://xw7qzi3dgg.execute-api.ap-south-1.amazonaws.com/dev/api/v1/products\"\r\n        );\r\n        setProducts(response.data.products);\r\n      } catch (error) {\r\n        console.log(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n\r\n    return () => {\r\n      // Cleanup function (if necessary)\r\n    };\r\n  }, [setProducts]);\r\n\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      await axios.delete(\r\n        `https://xw7qzi3dgg.execute-api.ap-south-1.amazonaws.com/dev/api/v1/deleteProduct?id=${productId}`\r\n      );\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(\"Error deleting product:\", error);\r\n    }\r\n  };\r\n\r\n  const editProduct = (productId) => {\r\n    setEditingProductId(productId);\r\n    const productToEdit = products.find((product) => product.id === productId);\r\n    setEditedProduct(productToEdit);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingProductId(null);\r\n    setEditedProduct({});\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedProduct((prevProduct) => ({\r\n      ...prevProduct,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const saveProduct = async (productId) => {\r\n    try {\r\n      await axios.put(\r\n        `https://xw7qzi3dgg.execute-api.ap-south-1.amazonaws.com/dev/api/v1/updateProduct?id=${productId}`,\r\n        editedProduct\r\n      );\r\n      setEditingProductId(null);\r\n      setEditedProduct({});\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(\"Error updating product:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteConfirmation = (productId) => {\r\n    setShowDeleteConfirmation(true);\r\n    setEditingProductId(productId);\r\n  };\r\n\r\n  const handleUpdateConfirmation = (productId) => {\r\n    setShowUpdateConfirmation(true);\r\n    setEditingProductId(productId);\r\n  };\r\n\r\n  const handleDeleteConfirm = (productId) => {\r\n    deleteProduct(productId);\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setShowDeleteConfirmation(false);\r\n    setEditingProductId(null);\r\n  };\r\n\r\n  const handleUpdateConfirm = (productId) => {\r\n    saveProduct(productId);\r\n    setShowUpdateConfirmation(false);\r\n  };\r\n\r\n  const handleUpdateCancel = () => {\r\n    setShowUpdateConfirmation(false);\r\n    setEditingProductId(null);\r\n  };\r\n  const url = window.location.href;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title\">Product Management Portal</h2>\r\n      <table className=\"table is-bordered is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n            <th>Stock</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>\r\n                {editingProductId === product.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={editedProduct.name || \"\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  product.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingProductId === product.id ? (\r\n                  <textarea\r\n                    name=\"description\"\r\n                    value={editedProduct.description || \"\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  product.description\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingProductId === product.id ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    value={editedProduct.price || \"\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  product.price\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingProductId === product.id ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"stock\"\r\n                    value={editedProduct.stock || \"\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  product.stock\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingProductId === product.id ? (\r\n                  <>\r\n                    <button\r\n                      className=\"button is-primary\"\r\n                      onClick={() => handleUpdateConfirmation(product._id)}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button className=\"button\" onClick={cancelEdit}>\r\n                      Cancel\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      className=\"button is-info\"\r\n                      onClick={() => editProduct(product._id)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className=\"button is-danger\"\r\n                      onClick={() => handleDeleteConfirmation(product._id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* If local host url then */}\r\n      { }\r\n      <Link to={url.includes(\"localhost\") ? \"/\" : \"/e-commerce-store\"} className=\"button is-link\">\r\n        Go Back\r\n      </Link>\r\n      {showDeleteConfirmation && (\r\n        <ConfirmationModal\r\n          message=\"Are you sure you want to delete this product?\"\r\n          onConfirm={() => handleDeleteConfirm(editingProductId)}\r\n          onCancel={handleDeleteCancel}\r\n        />\r\n      )}\r\n      {showUpdateConfirmation && (\r\n        <ConfirmationModal\r\n          message=\"Are you sure you want to save this product?\"\r\n          onConfirm={() => handleUpdateConfirm(editingProductId)}\r\n          onCancel={handleUpdateCancel}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductManagement;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"hero is-primary is-fullheight\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-half\">\r\n              <h1 className=\"title\">About</h1>\r\n              <div className=\"content\">\r\n                <p className=\"subtitle\">Project Submitted by:</p>\r\n                <table className=\"table is-bordered is-striped is-narrow is-hoverable\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Student ID</th>\r\n                      <th>Student Name</th>\r\n                      <th>Student Email</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>2047419</td>\r\n                      <td>Mursal Furqan Kumbhar</td>\r\n                      <td>kumbhar.2047419@studenti.uniroma</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2053796</td>\r\n                      <td>Srinjan Ghosh</td>\r\n                      <td>ghosh.2053796@studenti.uniroma1.it</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2049050</td>\r\n                      <td>Muhammad Waseem Kalhoro</td>\r\n                      <td>kalhoro.2049050@studenti.uniroma1.it</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <p className=\"profName\">Submitted to: Prof. Emiliano Casalicchio</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ user, logout, cart }) => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n  const url = window.location.href;\r\n\r\n  return (\r\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <Link to={url.includes(\"localhost\") ? \"/\" : \"/e-commerce-store\"} className=\"navbar-item\">\r\n          <b className=\"navbar-item is-size-4\">ecommerce</b>\r\n        </Link>\r\n        <button\r\n          className={`navbar-burger burger ${showMenu ? \"is-active\" : \"\"}`}\r\n          aria-label=\"menu\"\r\n          aria-expanded={showMenu}\r\n          onClick={toggleMenu}\r\n        >\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n        </button>\r\n      </div>\r\n      <div className={`navbar-menu ${showMenu ? \"is-active\" : \"\"}`}>\r\n        <div className=\"navbar-start\">\r\n          <Link to={url.includes(\"localhost\") ? \"/products\" : \"/e-commerce-store/products\"} className=\"navbar-item\">\r\n            Products\r\n          </Link>\r\n          <Link to={url.includes(\"localhost\") ? \"/about\" : \"/e-commerce-store/about\"} className=\"navbar-item\">\r\n            About\r\n          </Link>\r\n          {user && user.accessLevel < 1 && (\r\n            <>\r\n              <Link to={url.includes(\"localhost\") ? \"/add-products\" : \"/e-commerce-store/add-products\"} className=\"navbar-item\">\r\n                Add Product\r\n              </Link>\r\n              <Link to={url.includes(\"localhost\") ? \"/project-management\" : \"/e-commerce-store/project-management\"} className=\"navbar-item\">\r\n                Product Management\r\n              </Link>\r\n            </>\r\n          )}\r\n          <Link to={url.includes(\"localhost\") ? \"/orders\" : \"/e-commerce-store/orders\"} className=\"navbar-item\">\r\n            Orders\r\n          </Link>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            {user ? (\r\n              <button className=\"button is-danger\" onClick={logout}>\r\n                Logout\r\n              </button>\r\n            ) : (\r\n              <Link to={url.includes(\"localhost\") ? \"/login\" : \"/e-commerce-store/login\"} className=\"button is-primary\">\r\n                Login\r\n              </Link>\r\n            )}\r\n            <Link to={url.includes(\"localhost\") ? \"/cart\" : \"/e-commerce-store/cart\"} className=\"navbar-item\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-shopping-cart\"></i>\r\n              </span>\r\n              <span className=\"tag is-primary\">{Object.keys(cart).length}</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport withContext from \"../withContext\";\r\n\r\nconst Orders = (props) => {\r\n    const user = props.context.user;\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchOrders = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    \"https://zm06kfxmx0.execute-api.ap-south-1.amazonaws.com/dev/api/v1/getAllOrders?page=1&limit=10\"\r\n                );\r\n                if (user && user.accessLevel === 0) {\r\n                    setOrders(response.data.Orders);\r\n                } else {\r\n                    setOrders(\r\n                        response.data.Orders.filter(\r\n                            (order) => order.checkoutCart.user === user.email\r\n                        )\r\n                    );\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Error fetching orders:\", error);\r\n            }\r\n        };\r\n\r\n        fetchOrders();\r\n    }, []);\r\n\r\n    const calculateTotalPrice = (items) => {\r\n        return items.reduce(\r\n            (total, item) => total + item.product.price * item.amount,\r\n            0\r\n        );\r\n    };\r\n\r\n    const formatLocalTime = (timestamp) => {\r\n        const localTime = new Date(timestamp).toLocaleString();\r\n        return localTime;\r\n    };\r\n\r\n    const markCompleted = async (order) => {\r\n        const orderId = order._id;\r\n        const editedOrder = {\r\n            ...order,\r\n            checkoutCart: {\r\n                ...order.checkoutCart,\r\n                status: \"Completed\",\r\n            },\r\n        };\r\n        try {\r\n            const response = await axios.put(\r\n                `https://zm06kfxmx0.execute-api.ap-south-1.amazonaws.com/dev/api/v1/updateOrder?id=${orderId}`,\r\n                editedOrder\r\n            );\r\n            if (response.status === 200) {\r\n                // Order updated successfully\r\n                const updatedOrders = orders.map((o) =>\r\n                    o._id === orderId ? { ...o, checkoutCart: editedOrder.checkoutCart } : o\r\n                );\r\n                setOrders(updatedOrders);\r\n            } else {\r\n                console.log(\"Error updating order:\", response.data);\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Error updating order:\", error);\r\n        }\r\n    };\r\n\r\n    const deleteOrder = async(orderId) => {\r\n        try {\r\n            await axios.delete(\r\n                `https://zm06kfxmx0.execute-api.ap-south-1.amazonaws.com/dev/api/v1/deleteOrder?id=${orderId}`\r\n            );\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log(\"Error deleting product:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {user ? (\r\n                <>\r\n                    {isAdmin ? (\r\n                        <h2 className=\"title\">Admin Orders Page</h2>\r\n                    ) : (\r\n                        <h2 className=\"title\">My Orders</h2>\r\n                    )}\r\n\r\n                    {orders && orders.length ? (\r\n                        <>\r\n                            <table className=\"table is-bordered is-fullwidth\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Serial Number</th>\r\n                                        <th>Order ID</th>\r\n                                        <th>User</th>\r\n                                        <th>Products</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Order Date</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map((order, index) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.checkoutCart.user}</td>\r\n                                            <td>\r\n                                                {order.checkoutCart.items.map((item) => (\r\n                                                    <p key={item.id}>{item.product.name}</p>\r\n                                                ))}\r\n                                            </td>\r\n                                            <td>${calculateTotalPrice(order.checkoutCart.items)}</td>\r\n                                            <td>{formatLocalTime(order.checkoutCart.timestamp)}</td>\r\n                                            <td>{order.checkoutCart.status}</td>\r\n                                            <td>\r\n                                                {order.checkoutCart.status === \"Ordered\" && (\r\n                                                    <button\r\n                                                        className=\"button is-success\"\r\n                                                        onClick={() => markCompleted(order)}\r\n                                                    >\r\n                                                        Mark Completed\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    className=\"button is-danger\"\r\n                                                    onClick={() => deleteOrder(order._id)}\r\n                                                >\r\n                                                    Delete\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"title has-text-grey-light\">No orders found!</div>\r\n                        </>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <div className=\"title has-text-grey-light\">Login to view orders!</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withContext(Orders);\r\n","import React from \"react\";\r\nimport { Switch, Route, Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n// Import db.json file\r\nimport db from './users_db.json';\r\n\r\nimport AddProduct from './components/AddProduct';\r\nimport Cart from './components/Cart';\r\nimport Login from './components/Login';\r\nimport ProductList from './components/ProductList';\r\nimport HomePage from './components/HomePage';\r\nimport './App.css';\r\nimport ProjectManagement from './components/ProductManagement';\r\nimport About from './components/About';\r\n\r\nimport Context from \"./Context\";\r\nimport Navbar from \"./Navbar\";\r\nimport Orders from \"./components/Orders\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = React.useState(null);\r\n  const [cart, setCart] = React.useState({});\r\n  const [products, setProducts] = React.useState([]);\r\n  const [popupVisible, setPopupVisible] = React.useState(false);\r\n\r\n  const routerRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      let user = localStorage.getItem(\"user\");\r\n      let cart = localStorage.getItem(\"cart\");\r\n\r\n      const productsResponse = await axios.get('https://xw7qzi3dgg.execute-api.ap-south-1.amazonaws.com/dev/api/v1/getAllProducts?page=1&limit=10');\r\n      user = user ? JSON.parse(user) : null;\r\n      cart = cart ? JSON.parse(cart) : {};\r\n\r\n      setUser(user);\r\n      setProducts(productsResponse.data.products);\r\n      setCart(cart);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const login = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      // Perform login logic here\r\n      // If login is successful, resolve(true), otherwise resolve(false)\r\n      // Example implementation:\r\n      const user = db.users.find((user) => user.email === email && user.password === password);\r\n      if (user) {\r\n        const { email } = user;\r\n        const token = \"\"; // Generate token if needed\r\n        const accessLevel = email === 'admin@example.com' ? 0 : 1;\r\n        const authenticatedUser = {\r\n          email,\r\n          token,\r\n          accessLevel\r\n        };\r\n\r\n        setUser(authenticatedUser);\r\n        localStorage.setItem(\"user\", JSON.stringify(authenticatedUser));\r\n        resolve(true);\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const addToCart = (cartItem) => {\r\n    let updatedCart = { ...cart };\r\n    if (updatedCart[cartItem.id]) {\r\n      updatedCart[cartItem.id].amount += cartItem.amount;\r\n    } else {\r\n      updatedCart[cartItem.id] = cartItem;\r\n    }\r\n    if (updatedCart[cartItem.id].amount > cartItem.product.stock) {\r\n      updatedCart[cartItem.id].amount = cartItem.product.stock;\r\n    }\r\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n    setCart(updatedCart);\r\n\r\n    // Show popup notification\r\n    setPopupVisible(true);\r\n    setTimeout(() => {\r\n      setPopupVisible(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const removeFromCart = (cartItemId) => {\r\n    let updatedCart = { ...cart };\r\n    delete updatedCart[cartItemId];\r\n    localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const clearCart = () => {\r\n    let updatedCart = {};\r\n    localStorage.removeItem(\"cart\");\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const checkout = async () => {\r\n    const url = window.location.href;\r\n    if (!user) {\r\n      if (url.includes('localhost')) {\r\n        routerRef.current.history.push(\"/login\");\r\n      }\r\n      else {\r\n        routerRef.current.history.push(\"/e-commerce-store/login\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    const checkoutCart = {}\r\n    const updatedCart = { ...cart };\r\n    checkoutCart.items = Object.values(updatedCart);\r\n    checkoutCart.timestamp = Date.now();\r\n    checkoutCart.user = user.email;\r\n    checkoutCart.status = \"Ordered\";\r\n\r\n    await axios.post(\r\n      \"https://zm06kfxmx0.execute-api.ap-south-1.amazonaws.com/dev/api/v1/addOrder\",\r\n      { checkoutCart }\r\n    );\r\n\r\n    const updatedProducts = products.map(p => {\r\n      if (updatedCart[p.name]) {\r\n        p.stock = p.stock - updatedCart[p.name].amount;\r\n      }\r\n      return p;\r\n    });\r\n\r\n    setProducts(updatedProducts);\r\n    clearCart();\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  const addProduct = (product, callback) => {\r\n    let updatedProducts = [...products];\r\n    updatedProducts.push(product);\r\n    setProducts(updatedProducts);\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  };\r\n  const url = window.location.href;\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        user,\r\n        cart,\r\n        products,\r\n        removeFromCart,\r\n        addToCart,\r\n        login,\r\n        addProduct,\r\n        clearCart,\r\n        checkout\r\n      }}\r\n    >\r\n      <Router ref={routerRef}>\r\n        <Navbar user={user} logout={logout} cart={cart} />\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {/* If url is of local host, then*/}\r\n            {url.includes('localhost') ? (\r\n              <>\r\n                <Route exact path=\"/\" component={HomePage} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/cart\" component={Cart} />\r\n                <Route exact path=\"/add-products\" component={AddProduct} />\r\n                <Route exact path=\"/products\" component={ProductList} />\r\n                <Route exact path=\"/project-management\" component={ProjectManagement} />\r\n                <Route exact path=\"/orders\" component={Orders} />\r\n                <Route exact path=\"/about\" component={About} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Route exact path=\"/e-commerce-store\" component={HomePage} />\r\n                <Route exact path=\"/e-commerce-store/login\" component={Login} />\r\n                <Route exact path=\"/e-commerce-store/cart\" component={Cart} />\r\n                <Route exact path=\"/e-commerce-store/add-products\" component={AddProduct} />\r\n                <Route exact path=\"/e-commerce-store/products\" component={ProductList} />\r\n                <Route exact path=\"/e-commerce-store/project-management\" component={ProjectManagement} />\r\n                <Route exact path=\"/e-commerce-store/orders\" component={Orders} />\r\n                <Route exact path=\"/e-commerce-store/about\" component={About} />\r\n              </>\r\n            )}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      {popupVisible && (\r\n        <div className=\"popup\">\r\n          Item added to cart!\r\n        </div>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bulma/css/bulma.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}